# Use Node Alpine as base
FROM node:20-alpine3.19

# Set environment variables
ENV N8N_VERSION=1.24.0
ENV PYTHONUNBUFFERED=1
ENV VENV_PATH=/home/node/venv

# Install system dependencies
RUN apk add --no-cache \
    python3=~3.11  \
    py3-pip \
    ffmpeg \
    ffmpeg-dev \
    pkgconfig \
    build-base \
    git \
    bash \
    curl \
    wget \
    libffi-dev \
    openssl-dev \
    imagemagick \
    zlib-dev

# Create a Python virtual environment
RUN python3 -m venv $VENV_PATH

# # Activate venv and install Python packages
# RUN /bin/sh -c "source $VENV_PATH/bin/activate && \
#     pip install --upgrade pip setuptools wheel && \
#     pip install --no-cache-dir \
#         torch --index-url https://download.pytorch.org/whl/cpu && \
#         git+https://github.com/openai/whisper.git && \
#         requests moviepy python-dotenv tqdm gtts pydub pillow ffmpeg-python imagehash google-api-python-client google-auth-oauthlib"

# Install Python packages in the venv (no need to activate)
RUN $VENV_PATH/bin/pip install --upgrade pip setuptools wheel && \
    # $VENV_PATH/bin/pip install --no-cache-dir torch --index-url https://download.pytorch.org/whl/cpu && \
    # $VENV_PATH/bin/pip install --no-cache-dir git+https://github.com/openai/whisper.git && \
    $VENV_PATH/bin/pip install --no-cache-dir \
            requests \
            moviepy==1.0.3 \
            python-dotenv \
            tqdm \
            gtts \
            pydub \
            pillow==9.5.0 \
            ffmpeg-python==0.2.0 \
            imagehash \
            google-api-python-client \
            google-auth-oauthlib \
            opencv-python-headless \
            numpy \
            faster-whisper==0.7.0 && \
    $VENV_PATH/bin/pip install --quiet git+https://github.com/Zulko/moviepy.git@bc8d1a831d2d1f61abfdf1779e8df95d523947a5 && \
    $VENV_PATH/bin/pip install --quiet imageio==2.25.1 && \
    $VENV_PATH/bin/pip install --quiet ipython-autotime
# Make venv the default for python/pip
ENV PATH="$VENV_PATH/bin:$PATH"

# Install n8n globally
RUN npm install -g n8n@$N8N_VERSION

# Set working directory
WORKDIR /home/node

# Expose n8n port
EXPOSE 5678

# Start n8n
CMD ["n8n", "start"]